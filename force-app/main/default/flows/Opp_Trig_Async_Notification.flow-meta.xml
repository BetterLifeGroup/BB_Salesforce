<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Copy_1_of_Send_Notification</name>
        <label>Send Notification</label>
        <locationX>578</locationX>
        <locationY>600</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Copy_1_of_Get_Notification_Type.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>Body100</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>Title100</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Notification</name>
        <label>Send Notification</label>
        <locationX>50</locationX>
        <locationY>600</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Notification_Type.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>Body75</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>Title75</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assign_recipient</name>
        <label>Assign recipient</label>
        <locationX>50</locationX>
        <locationY>492</locationY>
        <assignmentItems>
            <assignToReference>RecipientId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Assign_recipient</name>
        <label>Assign recipient</label>
        <locationX>578</locationX>
        <locationY>492</locationY>
        <assignmentItems>
            <assignToReference>RecipientId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Copy_1_of_Send_Notification</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Still_Applicable</name>
        <label>Still Applicable?</label>
        <locationX>182</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SLA_75_Lapse__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>NOW</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Notification_Type</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Still_Applicable2</name>
        <label>Still Applicable?</label>
        <locationX>710</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SLA_Deadline__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>NOW</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Get_Notification_Type</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Flow Description: Used for Opportunity SLA Deadline notifications. Sent on 75% lapse and 100% lapse.

No Front-End Access - Flow is record triggered based on the entry criteria.</description>
    <environments>Default</environments>
    <formulas>
        <name>NOW</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <interviewLabel>Opp Trig Async Notification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opp Trig Async Notification</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Copy_1_of_Get_Notification_Type</name>
        <label>Get Notification Type</label>
        <locationX>578</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_Assign_recipient</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SLA_Notifications</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Notification_Type</name>
        <label>Get Notification Type</label>
        <locationX>50</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_recipient</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SLA_Notifications</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>122</locationX>
        <locationY>0</locationY>
        <filterFormula>OR(ISCHANGED({!$Record.SLA_75_Lapse__c}),ISNEW())</filterFormula>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>Run_Async_75</name>
            <connector>
                <targetReference>Still_Applicable</targetReference>
            </connector>
            <label>Run Async 75</label>
            <offsetNumber>0</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>SLA_75_Lapse__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <scheduledPaths>
            <name>Run_Async_100</name>
            <connector>
                <targetReference>Still_Applicable2</targetReference>
            </connector>
            <label>Run Async 100</label>
            <offsetNumber>0</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>SLA_Deadline__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Body100</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Customer Name: {!$Record.Account.FirstName} {!$Record.Account.LastName}
Opportunity Creation Date: {!$Record.CreatedDate}
Opportunity Type: {!$Record.RecordType.Name}</text>
    </textTemplates>
    <textTemplates>
        <name>Body75</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Customer Name: {!$Record.Account.FirstName} {!$Record.Account.LastName}
Opportunity Creation Date: {!$Record.CreatedDate}
Opportunity Type: {!$Record.RecordType.Name}</text>
    </textTemplates>
    <textTemplates>
        <name>Title100</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>The SLA on {!$Record.Name} has been breached.</text>
    </textTemplates>
    <textTemplates>
        <name>Title75</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>The SLA on {!$Record.Name} is about to be breached (75%)</text>
    </textTemplates>
    <variables>
        <name>RecipientId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
